##  -*- python -*-
##  $Id: windstille_main.hpp 1097 2005-09-23 16:01:59Z grumbel $
##   __      __ __             ___        __   __ __   __
##  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
##  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
##   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
##    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
##         \/          \/      \/    \/                         \/
##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel@gmx.de>
##
##  This program is free software; you can redistribute it and/or
##  modify it under the terms of the GNU General Public License
##  as published by the Free Software Foundation; either version 2
##  of the License, or (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
## 
##  You should have received a copy of the GNU General Public License
##  along with this program; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
##  02111-1307, USA.
##

Import('conf_env')

env = Environment(CC = 'gcc',
                  CXX = 'g++',
                  CXXFLAGS = ['-O0', '-Wall', '-Werror', '-g', '-DDEBUG'] + conf_env['CXXFLAGS'])

env.Append(CXXFLAGS = conf_env['CXXFLAGS'])

# env.Copy(LIBS = ['a', 'b'])

env.foo = 5
env.ParseConfig('sdl-config --cflags --libs')
env.ParseConfig('freetype-config --libs --cflags')

# env['ENV']['LSBCC_SHAREDLIBS'] = 'png2:SDL:SDL_image:vorbis:ogg:openal:physfs'

env.Program('../windstille', [
'baby_xml.cpp',
'blitter.cpp',
'box.cpp',
'camera.cpp',
'character.cpp',
'command_line.cpp',
'command_line_generic.cpp',
'console.cpp',
'controller_def.cpp',
'controller_help_window.cpp',
'conversation.cpp',
'dialog_manager.cpp',
'elevator.cpp',
'energy_bar.cpp',
'entity.cpp',
'config.cpp',
'game_object.cpp',
'game_session.cpp',
'globals.cpp',
'graphic_context_state.cpp',
'grenade.cpp',
'inventory.cpp',
'laser_pointer.cpp',
'liquid.cpp',
'pda.cpp',
'physics.cpp',
'pistol.cpp',
'response_curve.cpp',
'player.cpp',
'random.cpp',
'display/render_buffer.cpp',
'screen.cpp',
'screen_manager.cpp',
'scriptable_object.cpp',
'script_manager.cpp',
'sector.cpp',
'spawnpoint.cpp',
'sprite3dview.cpp',
'sprite2dview.cpp',
'text_area.cpp',
'tile.cpp',
'tile_factory.cpp',
'tile_map.cpp',
'tile_packer.cpp',
'tile_description.cpp',
'timer.cpp',
'trigger.cpp',
'title_screen.cpp',
'util.cpp',
'view.cpp',
'lisp_getters.cpp',
'windstille_main.cpp',
'objects/shockwave.cpp',
'objects/test_object.cpp',
'objects/bomb.cpp',
'objects/background_gradient.cpp',
'objects/hedgehog.cpp',
'objects/spider_mine.cpp',
'objects/swarm.cpp',
'objects/vrdummy.cpp',
'objects/nightvision.cpp',
'collision/collision_data.cpp',
'collision/collision_engine.cpp',
'collision/collision_object.cpp',
'collision/collision_test.cpp',
'collision/ladder_contact.cpp',
'collision/stair_contact.cpp',
'display/display.cpp',
'display/drawing_context.cpp',
'display/framebuffer.cpp',
'display/scene_context.cpp',
'display/vertex_array_drawing_request.cpp',
'display/opengl_state.cpp',
'display/surface.cpp',
'display/surface_manager.cpp',
'display/texture.cpp',
'display/texture_manager.cpp',
'display/shader_program.cpp',
'display/shader_object.cpp',
'font/border_font_effect.cpp',
'font/fonts.cpp',
'font/ttf_font.cpp',
'gui/automap.cpp',
'gui/button.cpp',
'gui/menu_component.cpp',
'gui/menu_item.cpp',
'gui/label.cpp',
'gui/component.cpp',
'gui/component_factory.cpp',
'gui/grid_component.cpp',
'gui/group_component.cpp',
'gui/gui_manager.cpp',
'gui/list_view.cpp',
'gui/root_component.cpp',
'gui/slider.cpp',
'gui/tab_component.cpp',
'gui/text_view.cpp',
'input/controller.cpp',
'input/controller_description.cpp',
'input/input_configurator.cpp',
'input/input_manager.cpp',
'input/input_manager_impl.cpp',
'input/input_manager_sdl.cpp',
'lisp/getters.cpp',
'lisp/lexer.cpp',
'lisp/lisp.cpp',
'lisp/parser.cpp',
'lisp/properties.cpp',
'lisp/writer.cpp',
'math/matrix.cpp',
'math/origin.cpp',
'math/quaternion.cpp',
'math/rect.cpp',
'math/vector.cpp',
'menu_manager.cpp',
'particle_viewer.cpp',
'particles/particle_system.cpp',
'particles/spark_drawer.cpp',
'particles/deform_drawer.cpp',
'particles/surface_drawer.cpp',
'physfs/physfs_sdl.cpp',
'physfs/physfs_stream.cpp',
'scripting/game_objects.cpp',
'scripting/interface.cpp',
'scripting/serialize.cpp',
'scripting/spawn_object.cpp',
'scripting/squirrel_error.cpp',
'scripting/wrapper.cpp',
'scripting/wrapper_util.cpp',
'signals/slot.cpp',
'signals/slot_generic.cpp',
'sound/sound_file.cpp',
'sound/sound_manager.cpp',
'sound/sound_source.cpp',
'sound/stream_sound_source.cpp',
'sprite2d/data.cpp',
'sprite2d/manager.cpp',
'sprite2d/sprite.cpp',
'sprite3d/data.cpp',
'sprite3d/manager.cpp',
'sprite3d/sprite3d.cpp',
'tinygettext/gettext.cpp',
'tinygettext/tinygettext.cpp'
],
LIBS    = ['GL', 'GLU', 'squirrel', 'physfs', 'SDL_image', 'openal', 'glew', 'ogg', 'vorbis', 'vorbisfile', 'png'] + env['LIBS'],
LIBPATH = ['../lib/'],
CPPPATH = env['CPPPATH'] + ['.', '..', '../lib/SQUIRREL2/include/', '../lib/glew'])

# EOF #
