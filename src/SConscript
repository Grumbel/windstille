##  -*- python -*-
##  Windstille - A Sci-Fi Action-Adventure Game
##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel@gmx.de>
##
##  This program is free software: you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation, either version 3 of the License, or
##  (at your option) any later version.
##  
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##  
##  You should have received a copy of the GNU General Public License
##  along with this program.  If not, see <http://www.gnu.org/licenses/>.

Import('conf_env', 'features')

SConscript('scripting/SConscript')

env = conf_env.Clone()
env.Append(LIBS    = ['GL', 'GLU', 'GLEW', 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals'])
env.Append(LIBPATH = ['../external/'] )
env.Append(CPPPATH = ['.', '..', '../external/SQUIRREL2/include/'])

if features['64bit']:
    env.Append(CPPDEFINES = '_SQ64')

if features['cwiid']:
    env.Append(CPPDEFINES = 'HAVE_CWIID')
    env.Append(LIBS = 'cwiid')

# env.Clone(LIBS = ['a', 'b'])

env.foo = 5
env.ParseConfig('sdl-config --cflags --libs')
env.ParseConfig('freetype-config --libs --cflags')

# env['ENV']['LSBCC_SHAREDLIBS'] = 'png2:SDL:SDL_image:vorbis:ogg:openal:physfs'

env.Program('../windstille', [
'armature/armature.cpp',
'armature/bone.cpp',
'armature/mesh.cpp',
'armature/model.cpp',
'armature/pose.cpp',
'armature_test.cpp',
'blitter.cpp',
'collision/collision_data.cpp',
'collision/collision_engine.cpp',
'collision/collision_object.cpp',
'collision/collision_test.cpp',
'collision/ladder_contact.cpp',
'collision/stair_contact.cpp',
'config.cpp',
'console.cpp',
'controller_def.cpp',
'controller_help_window.cpp',
'conversation.cpp',
'dialog_manager.cpp',
'display/display.cpp',
'display/drawing_context.cpp',
'display/framebuffer.cpp',
'display/opengl_state.cpp',
'display/render_buffer.cpp',
'display/scene_context.cpp',
'display/shader_object.cpp',
'display/shader_program.cpp',
'display/surface.cpp',
'display/surface_manager.cpp',
'display/texture.cpp',
'display/texture_manager.cpp',
'display/vertex_array_drawing_request.cpp',
'energy_bar.cpp',
'engine/camera.cpp',
'engine/entity.cpp',
'engine/game_object.cpp',
'engine/physics.cpp',
'engine/script_manager.cpp',
'engine/sector.cpp',
'font/border_font_effect.cpp',
'font/fonts.cpp',
'font/ttf_font.cpp',
'game_session.cpp',
'geometry_test.cpp',
'globals.cpp',
'graphic_context_state.cpp',
'gui/automap.cpp',
'gui/button.cpp',
'gui/component.cpp',
'gui/component_factory.cpp',
'gui/grid_component.cpp',
'gui/group_component.cpp',
'gui/gui_manager.cpp',
'gui/label.cpp',
'gui/list_view.cpp',
'gui/menu_component.cpp',
'gui/menu_item.cpp',
'gui/root_component.cpp',
'gui/slider.cpp',
'gui/tab_component.cpp',
'gui/text_view.cpp',
'input/controller.cpp',
'input/controller_description.cpp',
'input/input_configurator.cpp',
'input/input_manager.cpp',
'input/input_manager_impl.cpp',
'input/input_manager_sdl.cpp',
'input/wiimote.cpp',
'inventory.cpp',
'lisp/getters.cpp',
'lisp/lexer.cpp',
'lisp/lisp.cpp',
'lisp/parser.cpp',
'lisp/properties.cpp',
'lisp/writer.cpp',
'math/line.cpp',
'math/matrix.cpp',
'math/origin.cpp',
'math/quaternion.cpp',
'math/random.cpp',
'math/rect.cpp',
'math/vector.cpp',
'menu_manager.cpp',
'navigation/navigation_graph.cpp',
'navigation/node.cpp',
'navigation/properties.cpp',
'navigation/segment.cpp',
'navigation/segment_position.cpp',
'navigation_test.cpp',
'objects/background_gradient.cpp',
'objects/bomb.cpp',
'objects/box.cpp',
'objects/character.cpp',
'objects/elevator.cpp',
'objects/grenade.cpp',
'objects/hedgehog.cpp',
'objects/laser_pointer.cpp',
'objects/liquid.cpp',
'objects/nightvision.cpp',
'objects/pistol.cpp',
'objects/player.cpp',
'objects/scriptable_object.cpp',
'objects/shockwave.cpp',
'objects/spider_mine.cpp',
'objects/swarm.cpp',
'objects/test_object.cpp',
'objects/trigger.cpp',
'objects/vrdummy.cpp',
'particle_viewer.cpp',
'particles/deform_drawer.cpp',
'particles/particle_system.cpp',
'particles/spark_drawer.cpp',
'particles/surface_drawer.cpp',
'pda.cpp',
'physfs/physfs_sdl.cpp',
'physfs/physfs_stream.cpp',
'screen.cpp',
'screen_manager.cpp',
'scripting/game_objects.cpp',
'scripting/interface.cpp',
'scripting/squirrel_error.cpp',
'scripting/util.cpp',
'scripting/wrapper.cpp',
'sound/sound_file.cpp',
'sound/sound_manager.cpp',
'sound/sound_source.cpp',
'sound/stream_sound_source.cpp',
'sprite2d/data.cpp',
'sprite2d/manager.cpp',
'sprite2d/sprite.cpp',
'sprite2dview.cpp',
'sprite3d/data.cpp',
'sprite3d/manager.cpp',
'sprite3d/sprite3d.cpp',
'sprite3dview.cpp',
'text_area.cpp',
'tile/tile.cpp',
'tile/tile_description.cpp',
'tile/tile_factory.cpp',
'tile/tile_map.cpp',
'tile/tile_packer.cpp',
'timer.cpp',
'title_screen.cpp',
'util/util.cpp',
'util/baby_xml.cpp',
'util/command_line.cpp',
'util/command_line_generic.cpp',
'util/file_reader.cpp',
'util/getter.cpp',
'util/response_curve.cpp',
'util/sexpr_file_reader.cpp',
'view.cpp',
'windstille_main.cpp',
])

# EOF #
